trigger:
- none

pool:
  vmImage: ubuntu-latest

variables:
  GITLEAKS_VERSION: "v8.18.1"
  CONFIG_PATH: "gitleaks-config.toml"
  REPORT_PATH: "gitleaks-report.json"

steps:
- checkout: self

- script: |
    echo "Downloading Gitleaks $GITLEAKS_VERSION"
    curl -sSL https://github.com/gitleaks/gitleaks/releases/download/v8.18.1/gitleaks_8.18.1_linux_x64.tar.gz -o gitleaks.tar.gz

    echo "Extracting..."
    tar -xzf gitleaks.tar.gz
    chmod +x gitleaks
    sudo mv gitleaks /usr/local/bin/gitleaks

    echo "Installed Gitleaks version:"
    gitleaks version
  displayName: 'Install Gitleaks'

- script: |
    gitleaks detect \
      --source . \
      --config gitleaks-config.toml \
      --report-format json \
      --report-path gitleaks-report.json
  displayName: 'Run Gitleaks scan with custom config'


- publish: $(REPORT_PATH)
  artifact: gitleaks-report
  displayName: 'Publish Gitleaks Report'
  condition: always()


# Optional AI Summary step example:
# - script: |
#     pip install openai
#     python3 summarize.py $(REPORT_PATH)
#   env:
#     OPENAI_API_KEY: $(OPENAI_API_KEY)
#   displayName: 'Summarize Leaks with OpenAI'

# Optional webhook/logic app trigger example:
# - script: |
#     curl -X POST -H "Content-Type: application/json" --data-binary @$(REPORT_PATH) https://your-logic-app-url
#   displayName: 'Trigger Logic App'

# Optional simple email notification example:
#- script: |
     #if grep -q '"RuleID"' $(REPORT_PATH); then
      # echo "Secrets found in pipeline!" | mail -s "Gitleaks Alert" mik.sengupta@gmail.com
     #fi
  #displayName: 'Send Email Alert (on secrets)'

- bash: |
    if grep -q '"RuleID"' "$(REPORT_PATH)"; then
      echo "Secrets found in pipeline!" | mail -s "Gitleaks Alert" mik.sengupta@gmail.com
    else
      echo "No secrets found."
    fi
  displayName: 'Send email alert if secrets found'

